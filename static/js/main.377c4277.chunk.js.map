{"version":3,"sources":["firebase.js","FirebaseCrud.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","FirebaseCrud","useState","aFirstName","setAFirstName","aLastName","setALastName","userData","setUserData","uFirstName","setUFirstName","uLastName","setULastName","userId","setUserId","useEffect","database","ref","on","response","data","val","userInfo","id","push","FirstName","LastName","class","Container","Grid","Row","columns","Column","Segment","padded","Form","Field","Input","placeholder","focus","value","onChange","e","target","Button","onClick","firestore","handleAddUser","positive","Icon","name","child","update","primary","length","Header","textAlign","Table","celled","fixed","singleLine","HeaderCell","map","index","Body","Cell","handleUpdateClick","color","remove","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.377c4277.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAJ5zvmF9-3gdjU2sM552P8v4lHOCCToB4\",\r\n  authDomain: \"chat-app-81dec.firebaseapp.com\",\r\n  projectId: \"chat-app-81dec\",\r\n  storageBucket: \"chat-app-81dec.appspot.com\",\r\n  messagingSenderId: \"716727661449\",\r\n  appId: \"1:716727661449:web:5d12a7f6b8700c36872758\",\r\n  measurementId: \"G-2QBQLRHK3R\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default firebase;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { \r\nContainer, \r\nGrid, \r\nSegment, \r\nForm, \r\nInput, \r\nButton,\r\nTable,\r\nHeader,\r\nIcon\r\n} from 'semantic-ui-react';\r\nimport firebase from './firebase';\r\n\r\nconst FirebaseCrud = () => {\r\n\r\n      const [aFirstName, setAFirstName] = useState('');\r\n      const [aLastName, setALastName] = useState('');\r\n      const [userData, setUserData] = useState([]);\r\n      const [uFirstName, setUFirstName] = useState('');\r\n      const [uLastName, setULastName] = useState('');\r\n      const [userId, setUserId] = useState('');\r\n\r\n      useEffect(() => {\r\n          const firestore = firebase.database().ref('/UserInfo');\r\n          firestore.on('value',(response)=>{\r\n              const data = response.val();\r\n              let userInfo = [];\r\n              for (let id in data) {\r\n                  userInfo.push({\r\n                      id:id,\r\n                      FirstName: data[id].FirstName,\r\n                      LastName: data[id].LastName,\r\n                  });\r\n              }\r\n              setUserData(userInfo);\r\n          });     \r\n      }, []);\r\n\r\n      const handleAddUser = () => {\r\n          const firestore = firebase.database().ref('/UserInfo');\r\n          let data = {\r\n              FirstName:aFirstName,\r\n              LastName:aLastName\r\n          }\r\n          firestore.push(data);\r\n          setAFirstName('');\r\n          setALastName('');\r\n      };\r\n\r\n      const handleUpdateUser = () => {\r\n          const firestore = firebase.database().ref('/UserInfo').child(userId);\r\n          firestore.update({\r\n              FirstName:uFirstName,\r\n              LastName:uLastName\r\n          })\r\n          setUFirstName('');\r\n          setULastName('');\r\n      };\r\n\r\n      const handleUpdateClick = (data) => {\r\n          setUFirstName(data.FirstName);\r\n          setULastName(data.LastName);\r\n          setUserId(data.id);\r\n      }\r\n\r\n      const handleDelete = (id) => {\r\n          const firestore = firebase.database().ref('UserInfo').child(id);\r\n          firestore.remove();\r\n    };\r\n\r\n    return <div class='ui hidden divider'>\r\n    <Container>\r\n        <Grid>\r\n            <Grid.Row columns='2'>\r\n                <Grid.Column>\r\n                    <Segment padded='very'>\r\n                        <Form>\r\n                            <Form.Field>\r\n                                <label>FirstName</label>\r\n                                <Input placeholder='FirstName' focus \r\n                                value={aFirstName} \r\n                                onChange={(e)=>{setAFirstName(e.target.value);\r\n                                }}\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>LastName</label>\r\n                                <Input placeholder='LastName' focus \r\n                                value={aLastName}\r\n                                onChange={(e)=>{setALastName(e.target.value);\r\n                                }}\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Button onClick={()=>{handleAddUser()}} positive>\r\n                                    <Icon name='add circle'></Icon>Add User</Button>\r\n                            </Form.Field>\r\n                        </Form>\r\n                    </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment padded='very'>\r\n                        <Form>\r\n                            <Form.Field>\r\n                                <label>FirstName</label>\r\n                                <Input placeholder='FirstName' focus \r\n                                value={uFirstName} \r\n                                onChange={(e)=>{setUFirstName(e.target.value);\r\n                                }}\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>LastName</label>\r\n                                <Input placeholder='LastName' focus \r\n                                value={uLastName}\r\n                                onChange={(e)=>{setULastName(e.target.value);\r\n                                }}\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Button onClick={()=>{handleUpdateUser()}} primary>\r\n                                    <Icon name='edit'></Icon>Update User</Button>\r\n                            </Form.Field>\r\n                        </Form>\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row columns='1'>\r\n                <Grid.Column>\r\n                    {\r\n                        userData.length == 0 ? (\r\n                        <Segment padded='very'>\r\n                            <Header textAlign='center'>\r\n                                There is no data available. Enter some data.\r\n                            </Header>\r\n                        </Segment>\r\n                        ) : (\r\n                        <Segment padded='very'>\r\n                            <Table celled fixed singleLine>\r\n                                <Table.Header>\r\n                                    <Table.Row>\r\n                                        <Table.HeaderCell>FirstName</Table.HeaderCell>\r\n                                        <Table.HeaderCell>LastName</Table.HeaderCell>\r\n                                        <Table.HeaderCell></Table.HeaderCell>\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n                                {\r\n                                    userData.map((data,index)=>{\r\n                                        return <Table.Body>\r\n                                            <Table.Cell>{data.FirstName}</Table.Cell>\r\n                                            <Table.Cell>{data.LastName}</Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Button primary onClick={()=>{handleUpdateClick(data)}}>\r\n                                                    <Icon name='edit'></Icon>\r\n                                                    Update\r\n                                                </Button>\r\n                                                <Button color='red' onClick={()=>{handleDelete(data.id)}}>\r\n                                                    <Icon name='delete'></Icon>\r\n                                                    Delete\r\n                                                </Button>\r\n                                            </Table.Cell>\r\n                                        </Table.Body>\r\n                                    })\r\n                                }\r\n                            </Table>\r\n                        </Segment>)\r\n                    }\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n        </Container>\r\n        </div>\r\n}\r\n\r\nexport default FirebaseCrud;","import FirebaseCrud from './FirebaseCrud'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FirebaseCrud></FirebaseCrud>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}